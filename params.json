{
  "name": "Chess-mates-josh-and-connor-",
  "tagline": "",
  "body": "# FP7-ChessNuts\r\n\r\n##Authors\r\nConor Finegan and Joshua Blanchette\r\n\r\n##Overview\r\nConor and I have recreated the classic game of Chess.  We as a team have incorporated a stable, high-performing back end and a visually appealing UI.\r\n\r\n##Screenshot\r\nHere is a screenshot of our chessboard.\r\n\r\n![alt-tag](https://raw.githubusercontent.com/oplS16projects/Chess-Mates-Josh-and-Connor-/master/Chessboard_Image.png)\r\n\r\n##Concepts Demonstrated\r\nChess is a highly stateful game, therefor our project is very object-oriented.  The pieces, tiles, and board are all seperated into classes.  High-order procedures like map and filter were very helpful when trying to find the valid moves that a piece can make.\r\n\r\n##External Technology and Libraries\r\nWe imported various sprite images to use for our pieces.  We used two libraries throughout our project, racket/GUI and racket/Draw. Racket/GUI and racket/Draw to create the chessboard and instantiate the window, and racket/draw again to draw the Chess pieces.\r\n\r\n##Favorite Scheme Expressions\r\n####Josh\r\n\r\nThe code linked below is my favorite scheme expression.  It's so simple, yet it embodies almost all of the mobility of a pawn.  A pawn can move up two tiles if it has not moved yet.  So the code checks if the Y coordinate is equal to its start-y, and if it is, then it will allow the pawn to move two spaces.  Again, so simple, yet creative. \r\n```scheme\r\n; if y-pos = start-pos, then piece hasn't moved and allow double move\r\n          (if (and (= y start-y)\r\n                   (call (call board 'tile-at x (op y 1)) 'is-empty)\r\n                   (call (call board 'tile-at x (op y 2)) 'is-empty))\r\n              (set! moves (cons (call board 'tile-at x (op y 2)) moves))\r\n              void)\r\n```\r\n####Conor\r\nEach team member should identify a favorite expression or procedure, written by them, and explain what it does. Why is it your favorite? What OPL philosophy does it embody?\r\n\r\n```scheme\r\nLink code here\r\n  matches)\r\n```\r\n\r\n#How to Download and Run\r\nTo open ChessNuts, download the zip file at the top of this page and run src/main.rkt. Use left click to select/move a piece, and right click to cancel a selection.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}